<?php
/**
 * Maho
 *
 * @package     default_default
 * @copyright   Copyright (c) 2006-2020 Magento, Inc. (https://magento.com)
 * @copyright   Copyright (c) 2020-2025 The OpenMage Contributors (https://openmage.org)
 * @copyright   Copyright (c) 2024-2025 Maho (https://mahocommerce.com)
 * @license     https://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/** @var Mage_Adminhtml_Block_Catalog_Product_Edit_Tab_Inventory $this */
?>
<?php if ($this->isReadonly()):?>
<?php $_readonly = ' disabled="disabled" ';?>
<?php else: ?>
<?php $_readonly = '';?>
<?php endif ?>
<div class="entry-edit">
    <div class="entry-edit-head">
        <h4><?= Mage::helper('catalog')->__('Inventory') ?></h4>
    </div>
    <fieldset>

        <legend><?= Mage::helper('catalog')->__('Inventory') ?></legend>
        <table cellspacing="0" class="form-list" id="table_cataloginventory">
        <tr>
            <td class="label"><label for="inventory_manage_stock"><?= Mage::helper('catalog')->__('Manage Stock') ?></label></td>
            <td class="value"><select id="inventory_manage_stock" name="<?= $this->getFieldSuffix() ?>[stock_data][manage_stock]" class="select" <?= $_readonly ?>>
                <option value="1"><?= Mage::helper('catalog')->__('Yes') ?></option>
                <option value="0"<?php if ($this->getConfigFieldValue('manage_stock') == 0): ?> selected="selected"<?php endif ?>><?= Mage::helper('catalog')->__('No') ?></option>
            </select>
            <input type="hidden" id="inventory_manage_stock_default" value="<?= $this->getDefaultConfigValue('manage_stock') ?>" />

            <?php $_checked = ($this->getFieldValue('use_config_manage_stock') || $this->isNew()) ? 'checked="checked"' : '' ?>
            <input type="checkbox" id="inventory_use_config_manage_stock" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_manage_stock]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" class="checkbox" <?= $_readonly ?>/>
            <label for="inventory_use_config_manage_stock" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
            <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_manage_stock'), document.getElementById('inventory_use_config_manage_stock').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>

<?php if(!$this->getProduct()->isComposite()): ?>
        <tr>
            <td class="label"><label for="inventory_qty"><?= Mage::helper('catalog')->__('Qty') ?><span class="required">*</span></label></td>
            <td class="value">
                <?php if (!$_readonly):?>
                <input type="hidden" id="original_inventory_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][original_inventory_qty]" value="<?= $this->getFieldValueAsFloat('qty') ?>"/>
                <?php endif ?>
                <input type="text" class="input-text required-entry validate-number" id="inventory_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][qty]" value="<?= $this->getFieldValueAsFloat('qty') ?>" <?= $_readonly ?>/>
            </td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>

        <tr>
            <td class="label"><label for="inventory_min_qty"><?= Mage::helper('catalog')->__('Qty for Item\'s Status to Become Out of Stock') ?></label></td>
            <td class="value"><input type="text" class="input-text validate-number" id="inventory_min_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][min_qty]" value="<?= $this->getFieldValueAsFloat('min_qty') ?>" <?= $_readonly ?>/>

            <?php $_checked = ($this->getFieldValue('use_config_min_qty') || $this->isNew()) ? 'checked="checked"' : '' ?>
            <input type="checkbox" id="inventory_use_config_min_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_min_qty]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" <?= $_readonly ?> />
            <label for="inventory_use_config_min_qty" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
            <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_min_qty'), document.getElementById('inventory_use_config_min_qty').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>

        <tr>
            <td class="label"><label for="inventory_min_sale_qty"><?= Mage::helper('catalog')->__('Minimum Qty Allowed in Shopping Cart') ?></label></td>
            <td class="value"><input type="text" class="input-text validate-number" id="inventory_min_sale_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][min_sale_qty]" value="<?= (bool) $this->getProduct()->getId() ? $this->getFieldValueAsFloat('min_sale_qty') : Mage::helper('catalog/product')->getDefaultProductValue('min_sale_qty', $this->getProduct()->getTypeId()) ?>" <?= $_readonly ?>/>

            <?php $_checked = ($this->getFieldValue('use_config_min_sale_qty') || $this->isNew()) ? 'checked="checked"' : '' ?>
            <input type="checkbox" id="inventory_use_config_min_sale_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_min_sale_qty]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" class="checkbox" <?= $_readonly ?> />
            <label for="inventory_use_config_min_sale_qty" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
            <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_min_sale_qty'), document.getElementById('inventory_use_config_min_sale_qty').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>

        <tr>
            <td class="label"><label for="inventory_max_sale_qty"><?= Mage::helper('catalog')->__('Maximum Qty Allowed in Shopping Cart') ?></label></td>
            <td class="value"><input type="text" class="input-text validate-number" id="inventory_max_sale_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][max_sale_qty]" value="<?= $this->getFieldValueAsFloat('max_sale_qty') ?>" <?= $_readonly ?> />

            <?php $_checked = ($this->getFieldValue('use_config_max_sale_qty') || $this->isNew()) ? 'checked="checked"' : '' ?>
            <input type="checkbox" id="inventory_use_config_max_sale_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_max_sale_qty]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" class="checkbox" <?= $_readonly ?> />
            <label for="inventory_use_config_max_sale_qty" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
            <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_max_sale_qty'), document.getElementById('inventory_use_config_max_sale_qty').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>

        <?php if($this->canUseQtyDecimals()): ?>
        <tr>
            <td class="label"><label for="inventory_is_qty_decimal"><?= Mage::helper('catalog')->__('Qty Uses Decimals') ?></label></td>
            <td class="value"><select id="inventory_is_qty_decimal" name="<?= $this->getFieldSuffix() ?>[stock_data][is_qty_decimal]" class="select" <?= $_readonly ?>>
                <option value="0"><?= Mage::helper('catalog')->__('No') ?></option>
                <option value="1"<?php if($this->getFieldValue('is_qty_decimal') == 1): ?> selected="selected"<?php endif ?>><?= Mage::helper('catalog')->__('Yes') ?></option>
            </select>
            </td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>

        <?php if (!$this->isVirtual()) : ?>
        <tr>
            <td class="label"><label for="inventory_is_decimal_divided"><?= Mage::helper('catalog')->__('Can be Divided into Multiple Boxes for Shipping') ?></label></td>
            <td class="value"><select id="inventory_is_decimal_divided" name="<?= $this->getFieldSuffix() ?>[stock_data][is_decimal_divided]" class="select" <?= $_readonly ?>>
                <option value="0"><?= Mage::helper('catalog')->__('No') ?></option>
                <option value="1"<?php if($this->getFieldValue('is_decimal_divided') == 1): ?> selected="selected"<?php endif ?>><?= Mage::helper('catalog')->__('Yes') ?></option>
            </select>
            </td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>
        <?php endif ?>

        <?php endif ?>

        <tr>
            <td class="label"><label for="inventory_backorders"><?= Mage::helper('catalog')->__('Backorders') ?></label></td>
            <td class="value"><select id="inventory_backorders" name="<?= $this->getFieldSuffix() ?>[stock_data][backorders]" class="select" <?= $_readonly ?>>
            <?php foreach ($this->getBackordersOption() as $option): ?>
                <?php $_selected = ($option['value'] == $this->getFieldValue('backorders')) ? 'selected="selected"' : '' ?>
                <option value="<?= $option['value'] ?>" <?= $_selected ?>><?= $option['label'] ?></option>
            <?php endforeach ?>
            </select>

            <?php $_checked = ($this->getFieldValue('use_config_backorders') || $this->isNew()) ? 'checked="checked"' : '' ?>
            <input type="checkbox" id="inventory_use_config_backorders" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_backorders]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" class="checkbox" <?= $_readonly ?> />
            <label for="inventory_use_config_backorders" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
            <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_backorders'), document.getElementById('inventory_use_config_backorders').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>
        <tr>
            <td class="label"><label for="inventory_notify_stock_qty"><?= Mage::helper('catalog')->__('Notify for Quantity Below') ?></label></td>
            <td class="value"><input type="text" class="input-text validate-number" id="inventory_notify_stock_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][notify_stock_qty]" value="<?= $this->getFieldValueAsFloat('notify_stock_qty') ?>" <?= $_readonly ?>/>

            <?php $_checked = ($this->getFieldValue('use_config_notify_stock_qty') || $this->isNew()) ? 'checked="checked"' : '' ?>
            <input type="checkbox" id="inventory_use_config_notify_stock_qty" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_notify_stock_qty]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" class="checkbox" <?= $_readonly ?>/>
            <label for="inventory_use_config_notify_stock_qty" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
            <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_notify_stock_qty'), document.getElementById('inventory_use_config_notify_stock_qty').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>
<?php endif ?>
        <tr>
            <td class="label"><label for="inventory_enable_qty_increments"><?= Mage::helper('catalog')->__('Enable Qty Increments') ?></label></td>
            <td class="value"><select id="inventory_enable_qty_increments" name="<?= $this->getFieldSuffix() ?>[stock_data][enable_qty_increments]" class="select" <?= $_readonly ?>>
                <option value="1"><?= Mage::helper('catalog')->__('Yes') ?></option>
                <option value="0"<?php if ($this->getConfigFieldValue('enable_qty_increments') == 0): ?> selected="selected"<?php endif ?>><?= Mage::helper('catalog')->__('No') ?></option>
            </select>
            <input type="hidden" id="inventory_enable_qty_increments_default" value="<?= $this->getDefaultConfigValue('enable_qty_increments') ?>" />

            <?php $_checked = ($this->getFieldValue('use_config_enable_qty_increments') || $this->isNew()) ? 'checked="checked"' : '' ?>
            <input type="checkbox" id="inventory_use_config_enable_qty_increments" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_enable_qty_increments]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" class="checkbox" <?= $_readonly ?>/>
            <label for="inventory_use_config_enable_qty_increments" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
            <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_enable_qty_increments'), document.getElementById('inventory_use_config_enable_qty_increments').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>
        <tr>
            <td class="label"><label for="inventory_qty_increments"><?= Mage::helper('catalog')->__('Qty Increments') ?></label></td>
            <td class="value">
                <input type="text" class="input-text validate-digits" id="inventory_qty_increments" name="<?= $this->getFieldSuffix() ?>[stock_data][qty_increments]" value="<?= $this->getFieldValueAsFloat('qty_increments') ?>" <?= $_readonly ?>/>
                <?php $_checked = ($this->getFieldValue('use_config_qty_increments') || $this->isNew()) ? 'checked="checked"' : '' ?>
                <input type="checkbox" id="inventory_use_config_qty_increments" name="<?= $this->getFieldSuffix() ?>[stock_data][use_config_qty_increments]" value="1" <?= $_checked ?> onclick="toggleValueElements(this, this.parentNode);" class="checkbox" <?= $_readonly ?>/>
                <label for="inventory_use_config_qty_increments" class="normal"><?= Mage::helper('catalog')->__('Use Config Settings') ?></label>
                <?php if (!$this->isReadonly()):?><script type="text/javascript">toggleValueElements(document.getElementById('inventory_use_config_qty_increments'), document.getElementById('inventory_use_config_qty_increments').parentNode);</script><?php endif ?></td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>
        <tr>
            <td class="label"><label for="inventory_stock_availability"><?= Mage::helper('catalog')->__('Stock Availability') ?></label></td>
            <td class="value"><select id="inventory_stock_availability" name="<?= $this->getFieldSuffix() ?>[stock_data][is_in_stock]" class="select" <?= $_readonly ?>>
            <?php foreach ($this->getStockOption() as $option): ?>
                <?php $_selected = ($option['value'] == $this->getFieldValue('is_in_stock')) ? 'selected="selected"' : '' ?>
                <option value="<?= $option['value'] ?>" <?= $_selected ?>><?= $option['label'] ?></option>
            <?php endforeach ?>
            </select>
            </td>
            <td class="value scope-label"><?= Mage::helper('adminhtml')->__('[GLOBAL]') ?></td>
        </tr>
        </table>
    </fieldset>
</div>
<script type="text/javascript">
    function changeManageStockOption() {
        const manageStockCheckbox = document.getElementById('inventory_use_config_manage_stock');
        const manageStockSelect = document.getElementById('inventory_manage_stock');
        const manageStockDefault = document.getElementById('inventory_manage_stock_default');

        const manageStock = manageStockCheckbox.checked
            ? manageStockDefault.value
            : manageStockSelect.value;

        const catalogInventoryNotManageStockFields = {
            inventory_min_sale_qty: true,
            inventory_max_sale_qty: true,
            inventory_enable_qty_increments : true,
            inventory_qty_increments: true
        };

        const tableRows = document.querySelectorAll('#table_cataloginventory tr');
        const manageStockRow = manageStockSelect.closest('tr');

        tableRows.forEach(el => {
            if (el === manageStockRow) {
                return;
            }

            let skipRow = false;
            for (const field in catalogInventoryNotManageStockFields) {
                const fieldElement = document.getElementById(field);
                if (fieldElement && fieldElement.closest('tr') === el) {
                    skipRow = true;
                    break;
                }
            }

            if (!skipRow) {
                el.style.display = manageStock == 1 ? '' : 'none';
            }
        });

        return true;
    }

    function applyEnableQtyIncrements() {
        const enableQtyIncrementsCheckbox = document.getElementById('inventory_use_config_enable_qty_increments');
        const enableQtyIncrementsSelect = document.getElementById('inventory_enable_qty_increments');
        const enableQtyIncrementsDefault = document.getElementById('inventory_enable_qty_increments_default');

        const enableQtyIncrements = enableQtyIncrementsCheckbox.checked
            ? enableQtyIncrementsDefault.value
            : enableQtyIncrementsSelect.value;

        const qtyIncrementsRow = document.getElementById('inventory_qty_increments').closest('tr');
        qtyIncrementsRow.style.display = enableQtyIncrements == 1 ? '' : 'none';
    }

    function applyEnableDecimalDivided() {
        const isQtyDecimalSelect = document.getElementById('inventory_is_qty_decimal');
        const qtyIncrementsField = document.getElementById('inventory_qty_increments');
        const minSaleQtyField = document.getElementById('inventory_min_sale_qty');

    <?php if (!$this->isVirtual()) : ?>
        const isDecimalDividedRow = document.getElementById('inventory_is_decimal_divided').closest('tr');
        isDecimalDividedRow.style.display = 'none';
    <?php endif ?>

        qtyIncrementsField.classList.remove('validate-digits', 'validate-number');
        minSaleQtyField.classList.remove('validate-digits', 'validate-number');

        if (isQtyDecimalSelect.value == 1) {
        <?php if (!$this->isVirtual()) : ?>
            isDecimalDividedRow.style.display = '';
        <?php endif ?>
            qtyIncrementsField.classList.add('validate-number');
            minSaleQtyField.classList.add('validate-number');
        } else {
            qtyIncrementsField.classList.add('validate-digits');
            minSaleQtyField.classList.add('validate-digits');
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        const manageStockSelect = document.getElementById('inventory_manage_stock');
        const manageStockCheckbox = document.getElementById('inventory_use_config_manage_stock');

        if (manageStockSelect && manageStockCheckbox) {
            manageStockSelect.addEventListener('change', changeManageStockOption);
            manageStockCheckbox.addEventListener('change', changeManageStockOption);
            changeManageStockOption();
        }

        const enableQtyIncrementsSelect = document.getElementById('inventory_enable_qty_increments');
        const enableQtyIncrementsCheckbox = document.getElementById('inventory_use_config_enable_qty_increments');

        if (enableQtyIncrementsSelect && enableQtyIncrementsCheckbox) {
            enableQtyIncrementsSelect.addEventListener('change', applyEnableQtyIncrements);
            enableQtyIncrementsCheckbox.addEventListener('change', applyEnableQtyIncrements);
            applyEnableQtyIncrements();
        }

        const isQtyDecimalSelect = document.getElementById('inventory_is_qty_decimal');
        const qtyIncrementsField = document.getElementById('inventory_qty_increments');
        const minSaleQtyField = document.getElementById('inventory_min_sale_qty');

        if (isQtyDecimalSelect && qtyIncrementsField && minSaleQtyField) {
            isQtyDecimalSelect.addEventListener('change', applyEnableDecimalDivided);
            applyEnableDecimalDivided();
        }
    });
</script>
