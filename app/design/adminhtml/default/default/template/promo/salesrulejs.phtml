<?php
/**
 * Maho
 *
 * @package     default_default
 * @copyright   Copyright (c) 2006-2020 Magento, Inc. (https://magento.com)
 * @copyright   Copyright (c) 2022 The OpenMage Contributors (https://openmage.org)
 * @copyright   Copyright (c) 2024-2025 Maho (https://mahocommerce.com)
 * @license     https://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<script>
const couponTypeSpecific = '<?= Mage_SalesRule_Model_Rule::COUPON_TYPE_SPECIFIC ?>';

function disableEnableCouponsTabContent(disable) {
    const containerEl = document.getElementById('promo_catalog_edit_tabs_coupons_section_content');
    if (!containerEl) {
        return;
    }
    for (const el of containerEl.querySelectorAll('input, select, textarea, button')) {
        setElementDisable(el, disable);
    }
}

function handleCouponsTabContentActivity() {
    const couponType = document.getElementById('rule_coupon_type').value;
    if (couponType == couponTypeSpecific) {
        if (document.getElementById('rule_use_auto_generation').checked) {
            disableEnableCouponsTabContent(false);
            setElementDisable(document.getElementById('rule_coupon_code'), true);
        } else {
            disableEnableCouponsTabContent(true);
            setElementDisable(document.getElementById('rule_coupon_code'), false);
        }
    } else {
        disableEnableCouponsTabContent(true);
    }
}

function refreshCouponCodesGrid(grid, gridMassAction) {
    grid.reload();
    gridMassAction.unselectAll();
}

async function generateCouponCodes(idPrefix, generateUrl, grid) {
    const fieldsetEl = document.getElementById(idPrefix + 'information_fieldset');
    const elements = fieldsetEl.querySelectorAll('input, select, textarea');
    let validationResult = true;

    fieldsetEl.classList.remove('ignore-validate');
    for (const el of elements) {
        validationResult &&= Validation.validate(el, {
            useTitle: false,
            onElementValidate: function() {},
        });
    }
    fieldsetEl.classList.add('ignore-validate');

    if (!validationResult) {
        return;
    }

    const formData = new FormData();
    for (const el of elements) {
        formData.append(el.name, el.value);
    }
    for (const extra of ['rule_uses_per_coupon', 'rule_uses_per_customer', 'rule_to_date']) {
        const el = document.getElementById(extra);
        formData.append(el.name, el.value);
    }

    clearMessagesDiv();

    try {
        const result = await mahoFetch(generateUrl, {
            method: 'POST',
            body: formData,
        });

        if (window[grid]) {
            window[grid].reload();
        }
        if (result?.messages) {
            setMessagesDivHtml(result.messages);
        }
    } catch (error) {
        setMessagesDiv(error.message, 'error');
    }

    handleCouponsTabContentActivity();
}

document.addEventListener('DOMContentLoaded', () => {
    handleCouponsTabContentActivity();
    document.getElementById('rule_coupon_type')?.addEventListener('change', handleCouponsTabContentActivity);
    document.getElementById('rule_use_auto_generation')?.addEventListener('change', handleCouponsTabContentActivity);
});
</script>
