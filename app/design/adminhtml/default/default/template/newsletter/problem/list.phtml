<?php
/**
 * Maho
 *
 * @package     default_default
 * @copyright   Copyright (c) 2006-2020 Magento, Inc. (https://magento.com)
 * @copyright   Copyright (c) 2021-2024 The OpenMage Contributors (https://openmage.org)
 * @copyright   Copyright (c) 2024-2025 Maho (https://mahocommerce.com)
 * @license     https://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/** @var Mage_Adminhtml_Block_Newsletter_Problem $this */
?>
<div class="content-header">
    <table cellspacing="0">
        <tr>
            <td style="width:50%;"><h3><?= Mage::helper('newsletter')->__('Newsletter Problem Reports') ?></h3></td>
            <td class="form-buttons"></td>
        </tr>
    </table>
</div>
<div>
    <?= $this->getChildHtml('grid') ?>
</div>
<?php if($this->getShowButtons()): ?>
<div class="form-buttons">
    <?= $this->getUnsubscribeButtonHtml() ?>
    <?= $this->getDeleteButtonHtml() ?>
</div>
<?php endif ?>
<script type="text/javascript">
    const problemController = {
        checkCheckboxes(controlCheckbox) {
            const problemGrid = document.getElementById('problemGrid');
            if (problemGrid) {
                const elements = problemGrid.getElementsByClassName('problemCheckbox');
                Array.from(elements).forEach(obj => {
                    obj.checked = controlCheckbox.checked;
                });
            }
        },

        rowClick(e) {
            if (!e.target.classList.contains('problemCheckbox')) {
                const row = e.target.closest('tr');
                if (row) {
                    const elements = row.getElementsByClassName('problemCheckbox');
                    if (elements.length === 1) {
                        elements[0].checked = !elements[0].checked;
                    }
                }
            }
        },

        unsubscribe() {
            const elements = document.querySelectorAll('input.problemCheckbox');
            const formData = new FormData();

            elements.forEach(element => {
                if (element.checked) {
                    formData.append(element.name, element.value);
                }
            });

            formData.append('_unsubscribe', '1');
            formData.append('form_key', FORM_KEY);

            const url = problemGridJsObject.url;

            mahoFetch(url + '?ajax=1', {
                method: 'POST',
                body: formData
            })
            .then(data => {
                const problemGrid = document.getElementById('problemGrid');
                if (problemGrid) {
                    problemGrid.innerHTML = data;
                    if (problemGridJsObject && problemGridJsObject.initGrid) {
                        problemGridJsObject.initGrid();
                    }
                }
            });
        },

        deleteSelected() {
            const elements = document.querySelectorAll('input.problemCheckbox');
            const formData = new FormData();

            elements.forEach(element => {
                if (element.checked) {
                    formData.append(element.name, element.value);
                }
            });

            formData.append('_delete', '1');
            formData.append('form_key', FORM_KEY);

            const url = problemGridJsObject.url;

            mahoFetch(url + '?ajax=1', {
                method: 'POST',
                body: formData
            })
            .then(data => {
                const problemGrid = document.getElementById('problemGrid');
                if (problemGrid) {
                    problemGrid.innerHTML = data;
                    if (problemGridJsObject && problemGridJsObject.initGrid) {
                        problemGridJsObject.initGrid();
                    }
                }
            });
        }
    };

    document.addEventListener('DOMContentLoaded', () => {
        if (typeof varienGlobalEvents !== 'undefined') {
            varienGlobalEvents.attachEventHandler('gridRowClick', problemController.rowClick.bind(problemController));
        }
    });
</script>
